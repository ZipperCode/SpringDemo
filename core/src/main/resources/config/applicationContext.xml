<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <!-- annotation配置支持 -->
    <context:annotation-config/>

    <import resource="dataSource.xml"/>
    <!--普通类-->
    <bean id="demo" class="com.spring.core.demo.ioc.Demo"/>
    <!--内部类-->
    <bean id="innerDemo" class="com.spring.core.demo.ioc.Demo$InnerDemo"/>
    <!-- 单例注入 -->
    <bean id="singletonDemo1"
          class="com.spring.core.demo.ioc.SingletonDemo"
          factory-method="getInstance"/>
    <!-- 单例带有参构造 使用懒加载（此例子已经是懒汉式）-->
    <bean id="singletonDemo2"
          lazy-init="true"
          class="com.spring.core.demo.ioc.SingletonDemo" factory-method="getInstance">
        <constructor-arg ref="demo"/>
    </bean>

    <bean id="demoP" class="com.spring.core.demo.ioc.Demo"
          p:param1="${spring.demo.param1}"
          p:param2="${spring.demo.param2}"
    />

    <bean id="lifecycleDemo" class="com.spring.core.demo.ioc.LifecycleDemo"/>
    <!-- 自定义的BeanPostProcessor -->
    <bean class="com.spring.core.demo.ioc.BeanPostProcessorDemo"/>

    <!-- FactoryBean的实现 -->
    <bean id="factoryBeanDemo" class="com.spring.core.demo.ioc.FactoryBeanDemo"/>

    <!-- 不使用唯一id，使用限定符区别相同类型的对象 -->

    <bean class="com.spring.core.demo.ioc.MovieCatalog">
        <qualifier value="first"/>
        <constructor-arg name="type" value="first"/>
    </bean>

    <bean class="com.spring.core.demo.ioc.MovieCatalog">
        <qualifier value="second"/>
        <constructor-arg name="type" value="second"/>
    </bean>

    <bean id="qualifierDemo" class="com.spring.core.demo.ioc.QualifierDemo"/>

    <!-- 泛型装配 -->
    <bean class="com.spring.core.demo.ioc.genericity.GenericityConfiguration"/>
    <bean id="genericityDemo" class="com.spring.core.demo.ioc.genericity.GenericityDemo"/>

    <bean class="com.spring.core.demo.ioc.i18n.MessageConfig"/>

    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>i18n.format</value>
            </list>
        </property>
    </bean>

    <!-- 自定义数据转化 -->
    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="com.spring.core.demo.type.ExoticType" value="com.spring.core.demo.type.ExoticTypeEditor"/>
            </map>
        </property>
    </bean>

    <bean class="com.spring.core.demo.type.ExoticTypeEditor"/>

    <bean id="exoticType" class="com.spring.core.demo.type.ExoticType">
        <!--自定义转换器后，此处传入的参数已经无效-->
        <constructor-arg name="name" value="123"/>
    </bean>

    <bean id="dependOnExoticType" class="com.spring.core.demo.type.DependOnExoticType">
        <property name="exoticType" value="zzp====>"/>
    </bean>


</beans>